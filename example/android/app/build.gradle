def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
//apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
    }

//    sourceSets {
//        main.java.srcDirs += 'src/main/java'
//        main.proto.srcDirs += '../../../proto/'
//    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flutter_plugin_dialog_box_example"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

//dependencies {
//    implementation 'com.google.protobuf:protobuf-lite:3.0.1'
//}

//protobuf {
//    protoc {
//        artifact = 'com.google.protobuf:protoc:3.6.1'
//    }
//    plugins {
//        javalite {
//            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
//        }
//        grpc {
//            artifact = 'io.grpc:protoc-gen-grpc-java:1.29.0'
//        }
//    }
//    generateProtoTasks {
//        all().each { task ->
//            task.plugins {
//                javalite { }
//            }
//        }
//    }
//}